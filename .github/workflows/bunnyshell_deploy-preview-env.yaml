name: Bunnyshell - Deploy Preview Environment
concurrency: bns-deploy-${{ github.event.number || github.event.issue.number }}
on:
  workflow_call:
    inputs:
      git-ref:
        description: 'The git ref to use'
        type: string
        required: true
      argocd-image:
        description: 'ArgoCD image to use'
        type: string     
        required: true
        default: 'quay.io/argoproj/argocd:latest'
      bunnyshell-yaml-path:
        description: 'bunnyshell.yaml file to start from'
        type: string
        required: false
        default: .bunnyshell/templates/preview/bunnyshell.yaml
    secrets:
      bunnyshell_preview_password:
        required: true
      bunnyshell_access_token:
        required: true
      bunnyshell_app_private_key:
        required: true
jobs:
  prepare:
    permissions:
      contents: read
    runs-on: ubuntu-22.04
    outputs:
      bunnyshell-yaml-contents: ${{ steps.prepare-bunnyshell-yaml.outputs.bunnyshell-yaml-contents }}
      mihai: ${{ steps.prepare-bunnyshell-yaml.outputs.mihai }}
    steps:
      - name: setup-yq
        uses: frenck/action-setup-yq@c4b5be8b4a215c536a41d436757d9feb92836d4f # v1.0.2
      - name: Check out the repo
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.3.0
        with:
          ref: ${{ inputs.git-ref }}
          fetch-depth: 0
      - name: Prepare vars
        run: |
          echo "BNS_GIT_SHA=`git rev-parse --short HEAD`" >> "$GITHUB_ENV"
      - name: Prepare bunnyshell.yaml
        id: prepare-bunnyshell-yaml
        run: |
          set -e
  
          # update branch
          yq "(.components[] | select(.gitBranch != null)).gitBranch |= \"${{ env.BNS_GIT_SHA }}\"" ${{ inputs.bunnyshell-yaml-path }} > bunnyshell_wf_updated.yaml

          # set environmentVariables
          yq -i ".environmentVariables.ARGOCD_IMAGE |= \"${{ inputs.argocd-image }}\"" bunnyshell_wf_updated.yaml

          # set application Variables
          yq -i "(.components[] | select(.name == \"argocd-ttyd\")).environment.ARGOCD_PASS |= \"bns_secret(miahi_test)\"" bunnyshell_wf_updated.yaml
       
          # set outputs
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          echo "bunnyshell-yaml-contents<<$EOF" >> "$GITHUB_OUTPUT"
          cat bunnyshell_wf_updated.yaml >> "$GITHUB_OUTPUT"
          echo "$EOF" >> "$GITHUB_OUTPUT"

          echo "mihai=hello mihai" >> "$GITHUB_OUTPUT"

          cat $GITHUB_OUTPUT;
  deploy:
    permissions:
      pull-requests: write
    name: Deploy Environment
    needs: prepare
    uses: bunnyshell/workflows/.github/workflows/deploy-env.yaml@main
    with:
      project-id: ${{ vars.BUNNYSHELL_PROJECT_ID }}
      cluster-id: ${{ vars.BUNNYSHELL_CLUSTER_ID }}
      env-name: 'ArgoCD PR #${{ github.event.number || github.event.issue.number }}'
      bunnyshell-yaml-contents: ${{ needs.prepare.outputs.bunnyshell-yaml-contents }}
      allowed-users: ${{ vars.BUNNYSHELL_ALLOWED_USERS }}
      comment-on-pr: true
      deploy-as-stopped: true
      git-ref: refs/pull/${{ github.event.number || github.event.issue.number }}/head
      restricted-files: |
          .bunnyshell/*
      use-app-token: true
    secrets:
      bunnyshell-access-token: ${{ secrets.bunnyshell_access_token }}
      app-private-key: ${{ secrets.bunnyshell_app_private_key }}
